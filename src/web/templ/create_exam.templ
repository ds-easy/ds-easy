package web

templ CreateExam(lessons []string, templates []string) {
	@Base() {
		<h1 class="mb-8 text-3xl font-bold">Create Exam</h1>
		<div class="grid gap-8 md:grid-cols-2">
			<div class="bg-white p-6 rounded-lg shadow-md">
				<form class="space-y-6" hx-post="/exams" hx-trigger="submit" hx-ext="submitjson" hx-target="#pdf-container">
					<div class="space-y-2">
						<label for="lesson_name" class="block text-sm font-medium text-gray-700">Lesson</label>
						<select id="lesson_name" name="lesson_name" class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md">
							<option value="">Select a lesson</option>
							for _, lesson := range lessons {
								<option value={lesson}>{ lesson }</option>
							}
						</select>
					</div>
					<div class="space-y-2">
						<label for="template_name" class="block text-sm font-medium text-gray-700">Template</label>
						<select id="template_name" name="template_name" class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md">
							<option value="">Select a template</option>
							for _, template := range templates {
								<option value={template}>{ template }</option>
							}
						</select>
					</div>
					<div class="space-y-2">
						<label for="limit" class="block text-sm font-medium text-gray-700">Number of exercises</label>
						<input type="number" id="limit" name="limit" min="0" value="0" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" />
					</div>
					<div class="space-y-2">
						<label for="exam_number" class="block text-sm font-medium text-gray-700">Exam number</label>
						<input type="number" id="exam_number" name="exam_number" min="0" value="0" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" />
					</div>
					<div class="space-y-2">
						<label for="date_of_passing" class="block text-sm font-medium text-gray-700">Date of passing</label>
						<input type="date" id="date_of_passing" name="date_of_passing" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" />
					</div>
					<input type="hidden" name="professor_id" value="2" />
					<button type="submit" class="w-full bg-[#004D40] text-white py-2 px-4 rounded-md hover:bg-[#004D40]/90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#004D40]">
						Generate Exam
					</button>
				</form>
			</div>
			<div class="bg-white w-full rounded-lg shadow-md flex items-center justify-center">
				<div class="text-center text-gray-500 w-full " id="pdf-container">
					<svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mx-auto mb-2 opacity-50"><path d="M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z"/><polyline points="14 2 14 8 20 8"/><line x1="16" x2="8" y1="13" y2="13"/><line x1="16" x2="8" y1="17" y2="17"/><line x1="10" x2="8" y1="9" y2="9"/></svg>
					<p>PDF Preview will appear here</p>
				</div>
			</div>
		</div>
		<script>
			htmx.defineExtension('submitjson', {
				onEvent: function (name, evt) {
				if (name === "htmx:configRequest") {
					evt.detail.headers['Content-Type'] = "application/json"
				}
				},
				encodeParameters: function(xhr, parameters, elt) {
					xhr.overrideMimeType('text/json')
					const body = {
						date_of_passing: new Date(parameters.date_of_passing + 'T00:00:00Z').toISOString(),
						lesson_name: parameters.lesson_name,
						template_name: parameters.template_name,
						exam_number: parseInt(parameters.exam_number),
						limit: parseInt(parameters.limit),
						professor_id: parseInt(parameters.professor_id),
					};
					return (JSON.stringify(body))
				}
			})
			</script>
	}
}